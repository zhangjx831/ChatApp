Test-case 1:
1. start server
2. start client x(the table should be sent from server to x)
3. start client y(the table should be sent from server to x and y)
4. start client z(the table should be sent from server to x and y and z)
5. chat x -> y, y->z, ... , x ->z (All combinations)
6. dereg x (the table should be sent to y, z. x should receive ’ack’)
7. chat y->x (this should fail and message should be sent to server, and message has to be saved for x in the server)
8. chat z->x (same as above)
9. reg x (messages should be sent from server to x, x’s status has to be broadcasted to all the other clients)
10. x, y, z:exit

Client x Input and Output:

>>> [Welcome, You are registered.]
>>> [Client table updated.]
>>> [Client table updated.]
>>> [Client table updated.]
>>> send y testxy
>>> [Message received by y.]
>>> send z testxz
>>> [Message received by z.]
>>> testyx
>>> testzx
>>> dereg x
>>> [You are offline. Bye.]
>>> reg x
>>> [You have messages]
>>>  y: 03/25/2022, 21:25:37 testofflinex
>>>  z: 03/25/2022, 21:25:45 testofflinex
>>> [Client table updated.]

Client y Input and Output:

>>> [Welcome, You are registered.]
>>> [Client table updated.]
>>> [Client table updated.]
>>> testxy
>>> send x testyx
>>> [Message received by x.]
>>> send z testyz
>>> [Message received by z.]
>>> >>> testzy
>>> [Client table updated.]
send y testofflinex
>>> testofflinex
>>> [Message received by y.]
>>> send x testofflinex
>>> [x offline, message sent to server.]
>>> >>> [Client table updated.]

Client z Input and Output:

>>> [Welcome, You are registered.]
>>> [Client table updated.]
>>> test y z
>>> test x z
>>> send x test z x
>>> [Message received by x.]
>>> send y test z y
>>> [Message received by y.]
>>> [Client table updated.]
>>> send x testxoffline
>>> [Client table updated.]

Test-case 2:

1. start server
2. start client x (the table should be sent from server to x )
3. start client y (the table should be sent from server to x and y)
4. dereg y
5. server exit
6. send message x-> y (will fail with both y and server, so should make 5 attempts and exit)

Client x Input and Output:

>>> [Welcome, You are registered.]
>>> [Client table updated.]
>>> [Client table updated.]
>>> [Client table updated.]
>>> send y testmessage
>>> [Server not responding]
>>> [Exiting]

Client y Input and Output:

>>> [Welcome, You are registered.]
>>> [Client table updated.]
>>> dereg y
>>> [You are offline. Bye.]

Test-case 3:

1. start server
2. start client x (the table should be sent from server to x )
3. start client y (the table should be sent from server to x and y)
4. start client z (the table should be sent from server to x , y and z) 
5. send group message x-> y,z


Client x Input and Output:

>>> [Welcome, You are registered.]
>>> [Client table updated.]
>>> [Client table updated.]
>>> [Client table updated.]
>>> send_all testgroupmessage
>>> [Message received by Server.]

Client y Input and Output:

>>> [Welcome, You are registered.]
>>> [Client table updated.]
>>> [Client table updated.]
>>> [Channel_message x: testgroupmessage]

Client z Input and Output:

>>> [Welcome, You are registered.]
>>> [Client table updated.]
>>> [Channel_message x: testgroupmessage]